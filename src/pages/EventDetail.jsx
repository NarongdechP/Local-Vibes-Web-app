import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { FaHeart } from "react-icons/fa";

const EventDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [event, setEvent] = useState(null);
  const [loading, setLoading] = useState(true);
  const [errorMsg, setErrorMsg] = useState("");
  const [favError, setFavError] = useState("");
  const [favLoading, setFavLoading] = useState(false);

  useEffect(() => {
    const fetchEvent = async () => {
      try {
        const response = await fetch(`http://localhost:3000/events/${id}`);
        const data = await response.json();

        if (response.ok) {
          setEvent(data.event);
        } else {
          setErrorMsg(data.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
        }
      } catch (error) {
        setErrorMsg("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå");
        console.error(error);
      } finally {
        setLoading(false);
      }
    };

    fetchEvent();
  }, [id]);

  const handleFavorite = async () => {
    setFavError("");
    setFavLoading(true);
    try {
      const token = localStorage.getItem("token");
      if (!token) {
        setFavError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î");
        setFavLoading(false);
        return;
      }

      const response = await fetch(`http://localhost:3000/favorites/${id}`, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });

      const data = await response.json();

      if (response.ok) {
        navigate("/FavoritePage");
      } else {
        setFavError(data.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡πÑ‡∏î‡πâ");
      }
    } catch (err) {
      console.error(err);
      setFavError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î");
    } finally {
      setFavLoading(false);
    }
  };

  if (loading) return <div>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå...</div>;
  if (errorMsg) return <div style={{ color: "red" }}>‚ùå {errorMsg}</div>;
  if (!event) return <div>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>;

  return (
    <div className="event-detail">
      <h2>{event.event_name}</h2>
      <img
        src={event.event_image_url || "/placeholder-image.jpg"}
        alt={event.event_name}
        style={{ width: "100%", maxWidth: "500px", marginBottom: "1rem" }}
      />
      <p>
        üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:{" "}
        {new Date(event.start_date).toLocaleDateString()} -{" "}
        {new Date(event.end_date).toLocaleDateString()}
      </p>
      <p>üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: {event.location || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
      <p>üé≠ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {event.category || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
      <p>üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {event.description || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"}</p>

      {/* ‡πÅ‡∏™‡∏î‡∏á error ‡∏Ç‡∏≠‡∏á favorite */}
      {favError && <p style={{ color: "red" }}>‚ùå {favError}</p>}

      {/* üî¥ ‡∏õ‡∏∏‡πà‡∏°‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö */}
      <button
        onClick={handleFavorite}
        disabled={favLoading}
        className="favorite-btn"
        style={{
          marginTop: "1rem",
          display: "flex",
          alignItems: "center",
          gap: "0.5rem",
          backgroundColor: "transparent",
          border: "1px solid red",
          padding: "0.5rem 1rem",
          cursor: favLoading ? "not-allowed" : "pointer",
          color: "red",
        }}
      >
        <FaHeart />
        <span>{favLoading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°..." : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö"}</span>
      </button>
    </div>
  );
};

export default EventDetail;
